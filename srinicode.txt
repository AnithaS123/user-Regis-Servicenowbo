var fs = require('fs');
var builder = require('botbuilder');
var restify = require('restify');
var apiai = require('apiai');
var APIAII = apiai('854ef36ee9ff4389baf041d8f87e40e0');
const uuidv1 = require('uuid/v1')();
require('dotenv-extended').load();
var apiairecognizer = require('api-ai-recognizer');
const unhandledRejection = require("unhandled-rejection");
let rejectionEmitter = unhandledRejection({
    timeout: 20
});
rejectionEmitter.on("unhandledRejection", (error, promise) => {
    fs.writeFileSync("./data.json", JSON.stringify(error), "utf8");
});

rejectionEmitter.on("rejectionHandled", (error, promise) => {
    fs.writeFileSync("./data.json", JSON.stringify(error), "utf8");
})
var GlideRecord = require('servicenow-rest').gliderecord;
var server = restify.createServer();
server.listen(process.env.port || process.env.PORT || 3978, function () {
    console.log('%s listening to %s', server.name, server.url);
});

var connector = new builder.ChatConnector({
    appId: 'd60f4a2a-5926-42c5-baa6-db7a8ddcd162',
    appPassword: '2uiQBbbGGAhkxnGVJDBeb9X'
});
server.post('/', connector.listen());
var bot = new builder.UniversalBot(connector, function (session) {
  if (session.message.text) {
        var request = APIAII.textRequest(session.message.text, {
            sessionId: uuidv1
        });
      request.on('response', function (response) {
          let result = response.result;
          //session.send(JSON.stringify(result));
          if(result.metadata.intentName=="Default Welcome Intent")
          {
          session.send("Hi Welcome!!! \n\nWhat would you like to do?");
          }
          else if(result.metadata.intentName=="add_user")
          {
           var email=result.parameters["email"];
          var firstname=result.parameters["given-name"];
          var lastname=result.parameters["last-name"];
          var idno=result.parameters["number"];
          var password=result.parameters["password"];
          var jobtitle=result.parameters["title"];
          var username=result.parameters["username"];
          if(username!="" && email!=""  && firstname!=""   && lastname!=""  && idno!="" && password!="" && jobtitle!="")
          {
           
         var obj = {
    email:email,
    user_password:password,
    first_name:firstname,
    last_name:lastname,
    employee_number:idno,
    user_name:username,
    title:jobtitle
};
var gr = new GlideRecord('dev43073', 'sys_user', 'admin', 'BUCnMM5FWds8');              
              gr.insert(obj).then(function(response){
 session.send("Thanks for your Details!!!\n\nMake sure you login to update device details?\n\nNow what would you like to do??"); 
})
         }
          else
          {
           session.send(result.fulfillment.speech);
          }
        
          }
          else if(result.metadata.intentName=="Default Fallback Intent")
          {
           session.send(result.fulfillment.speech);    
          }
      });
      request.on('error', function (error) {
            //  console.log(error);
        });
     request.end();
  }

});
// var recognizer = new apiairecognizer('854ef36ee9ff4389baf041d8f87e40e0');
// bot.recognizer(recognizer);
// var intents = new builder.IntentDialog({ recognizers: [recognizer] });
// bot.dialog('/', intents);
// intents.matches('Default Welcome Intent', [
//     function (session, args) {
//         session.send("Have a good day! How can I help you?");
//     }
// ]);//Welcome Intent Fired
// intents.matches('User registration',[
//      function (session, args) {
//      session.send("sure, Can you please tell me your name ?");
//      }
// ]);
// intents.matches('User registration - yes',[
//      function (session, args) {
//       var name = builder.EntityRecognizer.findEntity(args.entities, 'name');   
//      session.send("Nice to meet you "+firstname+". Can I have your Employee ID number please.");
//      }
// ]);

// intents.matches('add_user', [
//     function (session, args) {
//         var gr = new GlideRecord('dev43073', 'sys_user', 'admin', 'DEUCD78YCgkJ');
//         var firstname = builder.EntityRecognizer.findEntity(args.entities, 'firstname');
//         var lastname = builder.EntityRecognizer.findEntity(args.entities, 'lastname');
//         var title = builder.EntityRecognizer.findEntity(args.entities, 'title');
//         var emails = builder.EntityRecognizer.findEntity(args.entities, 'email');
//         var username = builder.EntityRecognizer.findEntity(args.entities, 'username');
//         var password = builder.EntityRecognizer.findEntity(args.entities, 'password');
//         var fulfillment = builder.EntityRecognizer.findEntity(args.entities, 'fulfillment');
//         var actionIncomplete = builder.EntityRecognizer.findEntity(args.entities, 'actionIncomplete');
     
//       if (fulfillment) {
//          var speech = fulfillment.entity;        
//          //session.send(speech+JSON.stringify(args));
//      }
//         session.send(JSON.stringify(args));
     
       
//     }
// ]);

// intents.onDefault(function (session) {
//     session.send("Sorry...can you say that again?");
// });